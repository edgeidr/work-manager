// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model User {
	id Int @id @default(autoincrement())
	email String @unique
	password String
	firstName String
	lastName String
	isActive Boolean @default(true)
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	userRoles UserRole[]
	userActions UserAction[]

	@@map("users")
}

model Role {
	id Int @id @default(autoincrement())
	name String @unique
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	userRoles UserRole[]
	roleActions RoleAction[]

	@@map("roles")
}

model Action {
	id Int @id @default(autoincrement())
	name String @unique
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	roleActions RoleAction[]
	userActions UserAction[]

	@@map("actions")
}

model RoleAction {
	roleId Int
	actionId Int

	role Role @relation(fields: [roleId], references: [id])
	action Action @relation(fields: [actionId], references: [id])

	@@id([roleId, actionId])
}

model UserRole {
	userId Int
	roleId Int

	user User @relation(fields: [userId], references: [id])
	role Role @relation(fields: [roleId], references: [id])

	@@id([userId, roleId])
}

enum Scope {
	ANY
	OWN
}

model UserAction {
	userId Int
	actionId Int
	scope Scope

	user User @relation(fields: [userId], references: [id])
	action Action @relation(fields: [actionId], references: [id])

	@@id([userId, actionId])
}